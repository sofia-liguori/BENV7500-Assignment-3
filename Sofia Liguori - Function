#import libraries to be used
import pysal as ps
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import geopandas as gpd

#create and download shapefile using AURIN
#define path of shapefile
shp_path = 'shp_data/osborn_popdensi_16.shp'

#read the shapefile as a dataframe using pysal and pandas
data = ps.pdio.read_files(shp_path)

#clean up data by renaming columns 
data = data.rename(columns={'0est_res_p':'estimated_pop','1os_brn_po':'os_born','2pop_densi':'pop_density'})

def HotspotsSyd(var):
    """
    Function that conducts a hotspot anaylsis for a certain variable in the Greater Sydney region, 
    and then plots the results. 
    
        var - the variable to be plotted, inputs: 
                'os_born' (% residents born overseas)
                'pop_density' (population density)
    """
    W = ps.queen_from_shapefile(shp_path)
    W.transform = 'r'
    
    milag = ps.lag_spatial(W, data[var])
    milagQ10 = ps.Quantiles(milag, k=10)
    
    mi = data[var]
    
    I_mi = ps.Moran(data[var].values, W)
    
    LMo_mi = ps.Moran_Local(data[var].values, W, permutations=9999)
    Lag_mi = ps.lag_spatial(W, data[var].values)
    
    W_sigs = Lag_mi[LMo_mi.p_sim <= 0.001]

    insigs = mi[LMo_mi.p_sim > .001]
    W_insigs = Lag_mi[LMo_mi.p_sim > 0.001]
    
    sig = LMo_mi.p_sim < 0.05
    hotspots = LMo_mi.q==1 *sig
    coldspots = LMo_mi.q==3 *sig
    
    from matplotlib import colors
    tx = gpd.read_file(shp_path) 
    hcmap = colors.ListedColormap(['#ebece8', '#f15362', '#aac1bf'])
    hotcold = hotspots*1 + coldspots*2
    hc_labels = ['0', '1 hotspot', '2 coldspot']
    labels = [hc_labels[i] for i in hotcold]

    f, ax = plt.subplots(1, figsize=(20, 20))
    tx.assign(cl=labels).plot(column='cl', 
                              categorical=True,
                              k=2, 
                              cmap=hcmap,
                              linewidth=0.3, 
                              ax=ax,
                              edgecolor='white',
                              legend=True)
    ax.set_axis_off()
    if var == 'pop_density':
        plt.title('Population Density per km2 in Greater Sydney', size=20)
    else:
        plt.title('Percentage of Residents Born Overseas in Greater Sydney', size=20)
    plt.show()
    
HotspotsSyd('os_born')
